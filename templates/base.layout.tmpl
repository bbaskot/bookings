{{define "base"}}
    <!doctype html>
      <html lang="sr">
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1">
          <title>Hotel Una Novi Grad</title>
          <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
          <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
      	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/css/datepicker-bs5.min.css">
      	<link rel="stylesheet" type="text/css" href="/static/css/styles.css">
        </head>
        <body>
      	<nav class="navbar navbar-expand-lg fixed-top navbar-dark bg-dark">
      		<div class="container-fluid">
      			<a class="navbar-brand" href="#">Navbar</a>
      			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      			<span class="navbar-toggler-icon"></span>
      		</button>
      				<div class="collapse navbar-collapse" id="navbarSupportedContent">
      					<ul class="navbar-nav me-auto mb-2 mb-lg-0">
      					<li class="nav-item">
      					<a class="nav-link active" aria-current="page" href="/">Početna</a>
      					</li>
      					<li class="nav-item">
      					<a class="nav-link" href="/about">O nama</a>
      					</li>
      					<li class="nav-item dropdown">
      					<a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
      						Sobe
      					</a>
      					<ul class="dropdown-menu">
      						<li><a class="dropdown-item" href="/room">Jednokrevetna soba</a></li>
      						<li><a class="dropdown-item" href="/apartment">Apartman</a></li>
      					</ul>
      					</li>
      					<li class="nav-item">
      					<a class="nav-link" href="/search-availability">Rezervišite odmah</a>
      					</li>
      					</ul>
      				</div>
      		</div>
      		</nav>
    {{block "content" .}}

    {{end}}
    
  <div class="row my-footer">
			<hr class = "solid">
			<div class = "col">
				<p class="footer-text">Sajt napravljen od strane Boška Baškota 2022.©</p>
			</div>
		</div>
		
	
	<script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/js/datepicker-full.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  {{block "js" .}}
    
  {{end}}
	<script>

		
		(() => {
		  'use strict'

		  // Fetch all the forms we want to apply custom Bootstrap validation styles to
		  const forms = document.querySelectorAll('.needs-validation')

		  // Loop over them and prevent submission
		  Array.from(forms).forEach(form => {
		    form.addEventListener('submit', event => {
		      if (!form.checkValidity()) {
		        event.preventDefault()
		        event.stopPropagation()
		      }
		  
		      form.classList.add('was-validated')
		    }, false)
		  })
		})()

		

		function notify(msg,msgType){
			notie.alert({
  				type: msgType,
  				text: msg,
			})
		}
		function Prompt(){
			let toast=function(c){
				const {
					icon= "success",
					msg="",
					position="top-end",
				}=c;
				const Toast = Swal.mixin({
				  toast: true,
				  position: position,
				  showConfirmButton: false,
				  icon: icon,
				  title: msg,
				  timer: 3000,
				  timerProgressBar: true,
				  didOpen: (toast) => {
				    toast.addEventListener('mouseenter', Swal.stopTimer)
				    toast.addEventListener('mouseleave', Swal.resumeTimer)
				  }
				});

				Toast.fire({
				 
				});
			}
			let success=function(c){
				const{
					title="Success",
					text="",
				}=c;
				Swal.fire({
				  icon: 'success',
				  title: title,
				  text: text,
				});

			}
			let error=function(c){
				const{
					title="Success",
					text="",
				}=c;
				Swal.fire({
				  icon: 'error',
				  title: title,
				  text: text,
				});

			}
			async function custom(c){
				const{
					msg="",
					title="",
				}=c;
				const { value: result } = await Swal.fire({
				  title: title,
				  html:msg,
				  backdrop: false,
				  showCancelButton:true,
				  focusConfirm: false,
				  willOpen: () =>{
					if(c.willOpen!==undefined){
						c.willOpen();
					}
				  },
				  didOpen: () =>{
					if(c.didOpen!==undefined){
						c.didOpen();
					}
				  },
				  preConfirm: () => {
				    return [
				      document.getElementById('start').value,
				      document.getElementById('end').value
				    ]
				  }
				})
				if(result.dismiss!==Swal.DismissReason.cancel){
					if(result.value!==""){
						if(c.callback!==undefined){
							c.callback(result);
						}else{
							c.callback(false);
						}
					}
				}
			}

			return{
				success : success,
				toast : toast,
				error : error,
				custom : custom,
			}
			

if (formValues) {
  Swal.fire(JSON.stringify(formValues))
}
		}
		
	</script>
  </body>
</html>
{{end}}